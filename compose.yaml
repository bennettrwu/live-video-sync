# name: "live-video-sync"
# services:
#   postgres:
#     image: postgres:17.0
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_DB=${POSTGRES_DB}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#     expose:
#       - 5432
#     restart: unless-stopped
#     volumes:
#       - postgres-data:/var/lib/mysql
#     healthcheck:
#       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
#       start_period: 120s
#       interval: 10s

#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     environment:
#       - NODE_ENV=${NODE_ENV}
#       - LOG_LEVEL=${LOG_LEVEL}
#       - LOG_FILE=${LOG_FILE}
#       - HOST=${HOST}
#       - PORT=${PORT}
#       - POSTGRES_HOST=postgres
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_DB=${POSTGRES_DB}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#     expose:
#       - 80
#     restart: unless-stopped
#     volumes:
#       - logs:/logs
#     depends_on:
#       mysql:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD", "bash", "-c", "printf \"GET /docker_healthcheck HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/80; echo $?;"]
#       start_period: 10s
#       start_interval: 1s

#   frontend:
#     build: 
#       context: ./frontend
#       dockerfile: Dockerfile
#     expose:
#       - 80
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "bash", "-c", "printf \"GET /docker_healthcheck HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/80; echo $?;"]
#       start_period: 10s
#       start_interval: 1s

#   nginx:
#     image: nginx:1.25
#     ports:
#       - ${APP_PORT}:80
#     restart: unless-stopped
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#     command: [nginx-debug, '-g', 'daemon off;']
#     depends_on:
#       backend:
#         condition: service_healthy
#       frontend:
#         condition: service_healthy

# volumes:
#   postgres-data:
#   logs: